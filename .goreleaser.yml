project_name: newrelic-super-agent
builds:
  -
    main: ./build/dummy.go
    goarch:
      - arm64
      - amd64
    goos:
      - linux
    binary: newrelic-super-agent
    hooks:
      post:
        - cmd: sh ./build/scripts/replace_go_with_rust.sh
          env:
            - ARCH={{ .Arch }}
        - cmd: sh ./build/scripts/download_embedded.sh
          env:
            - ARCH={{ .Arch }}
archives:
  - format: tar.gz
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    builds:
      - newrelic-super-agent

nfpms:
  - package_name: newrelic-super-agent

    # Replace arch for rpm from amd64 to x86_64 to be consistent with our rpm repo.
    file_name_template: >-
      {{ .PackageName }}_{{ .Version }}_{{ .Os }}_
      {{- if not (eq (filter .ConventionalFileName "\\.rpm$") "") }}
        {{- replace .Arch "amd64" "x86_64" }}
      {{- else }}
        {{- .Arch }}
      {{- end }}
      {{- with .Arm }}v{{ . }}{{- end }}
      {{- with .Mips }}_{{ . }}{{- end }}
      {{- if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{- end }}

    contents:
      # NR Super Agent
      - src: build/package/config.yaml
        dst: /etc/newrelic-super-agent/config.yaml
        type: config
      - src: build/package/newrelic-super-agent.service
        dst: /lib/systemd/system/newrelic-super-agent.service
      - src: distributions/newrelic-super-agent/newrelic-super-agent.conf
        dst: /etc/newrelic-super-agent/newrelic-super-agent.conf
        type: config|noreplace
      - src: LICENSE.md
        dst: /usr/share/doc/newrelic/newrelic-super-agent/LICENSE.md
      # Infra Agent
      - src: build/embedded/artifacts/{{- .Arch }}/newrelic-infra/newrelic-infra
        dst: /usr/bin/newrelic-infra
      - src: build/embedded/artifacts/{{- .Arch }}/newrelic-infra/LICENSE.txt
        dst: /var/db/newrelic-infra/LICENSE.txt
      # nri-docker
      - src: build/embedded/artifacts/{{- .Arch }}/nri-docker
        dst: /var/db/newrelic-infra/newrelic-integrations/bin/nri-docker
      - src: build/embedded/artifacts/{{- .Arch }}/docker-config.yml
        dst: /etc/newrelic-infra/integrations.d/docker-config.yml
        type: config
      # nri-flex
      - src: build/embedded/artifacts/{{- .Arch }}/nri-flex
        dst: /var/db/newrelic-infra/newrelic-integrations/bin/nri-flex
      # nri-prometheus
      - src: build/embedded/artifacts/{{- .Arch }}/nri-prometheus
        dst: /var/db/newrelic-infra/newrelic-integrations/bin/nri-prometheus
      # fluent-bit / logging
      - src: build/embedded/artifacts/{{- .Arch }}/fluent-bit/out_newrelic.so
        dst: /var/db/newrelic-infra/newrelic-integrations/logging/out_newrelic.so
      - src: build/embedded/artifacts/{{- .Arch }}/fluent-bit/parsers.conf
        dst: /var/db/newrelic-infra/newrelic-integrations/logging/parsers.conf
        type: config
      - src: build/embedded/artifacts/{{- .Arch }}/fluent-bit/file.yml.example
        dst: /etc/newrelic-infra/logging.d/file.yml.example
        type: config
      - src: build/embedded/artifacts/{{- .Arch }}/fluent-bit/fluentbit.yml.example
        dst: /etc/newrelic-infra/logging.d/fluentbit.yml.example
        type: config
      - src: build/embedded/artifacts/{{- .Arch }}/fluent-bit/syslog.yml.example
        dst: /etc/newrelic-infra/logging.d/syslog.yml.example
        type: config
      - src: build/embedded/artifacts/{{- .Arch }}/fluent-bit/systemd.yml.example
        dst: /etc/newrelic-infra/logging.d/systemd.yml.example
        type: config
      - src: build/embedded/artifacts/{{- .Arch }}/fluent-bit/tcp.yml.example
        dst: /etc/newrelic-infra/logging.d/tcp.yml.example
        type: config
      # NR Otel Collector
      - src: build/embedded/artifacts/{{- .Arch }}/nr-otel-collector/nr-otel-collector
        dst: /usr/bin/nr-otel-collector
      - src: build/embedded/artifacts/{{- .Arch }}/nr-otel-collector/nr-otel-collector.conf
        dst: /etc/nr-otel-collector/nr-otel-collector.conf
        type: config
      - src: build/embedded/artifacts/{{- .Arch }}/nr-otel-collector/config.yaml
        dst: /etc/nr-otel-collector/config.yaml
        type: config

    scripts:
      postinstall: build/package/postinstall.sh
      postremove: build/package/postremove.sh
      preremove: build/package/preremove.sh

    provides:
      - newrelic-infra (= 3.0.0)
      - nr-otel-collector (= 2.0.0)
    conflicts:
      - newrelic-infra
      - nr-otel-collector
    replaces:
      - newrelic-infra
      - nr-otel-collector

    recommends:
      - td-agent-bit #To be removed on removal of the ff fluent_bit_19
      - fluent-bit

    id: newrelic-super-agent
    builds:
      - newrelic-super-agent
    formats:
      - deb
      - rpm
    maintainer: New Relic <caos-team@newrelic.com>
    description: New Relic Super Agent - newrelic-super-agent
    license: Apache 2.0

signs:
  -
    id: checksums

    # Path to the checksum command.
    cmd: ./build/scripts/generate_checksum.sh
    args: [
      "-f", "{{ .Env.artifact }}",
    ]
    artifacts: all
  -
    id: signing

    # Path to the signature command.
    cmd: ./build/scripts/signing/sign.sh
    args: [
      "-f", "{{ .Env.artifact }}",
      "-m", "{{ .Env.GPG_MAIL }}",
      "-p", "{{ .Env.GPG_PASSPHRASE }}",
      "-k", "{{ .Env.GPG_PRIVATE_KEY_BASE64 }}"
    ]
    artifacts: all

publishers:
  - name: GH Publisher
    cmd: ./build/scripts/gh_publisher.sh -t {{ .Env.NR_RELEASE_TAG }} -f {{ abs .ArtifactPath }}
    extra_files:
      - glob: "./dist/*.asc"
      - glob: "./dist/*.sum"
    env:
      - GITHUB_TOKEN={{ .Env.GITHUB_TOKEN }}


release:
  disable: true

# Disable default checksum generator as we use a custom one per each artifact.
checksum:
  disable: true

# Skip auto-generating changelog.
changelog:
  skip: true
