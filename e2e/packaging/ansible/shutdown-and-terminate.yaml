---

- name: install super agent
  hosts: testing_hosts_linux
  become: true
  gather_facts: yes
  vars:
    nr_meta_agent_version: "{{ lookup('ansible.builtin.env', 'NR_META_AGENT_VERSION') }}"
    nr_meta_agent_version_real: "0.1.0" #TODO fix this. meta agent doesn't have toml file up-to-date
    process_user: "root"
    nr_infra_agent_version: "1.42.2"
    nr_otel_collector_version: "0.1.0"

  pre_tasks:
    - name: Update package repositories
      include_role:
        name: caos.ansible_roles.package_repo_update

    - name: Initial cleanup # Only required for shared infra.
      include_tasks: ./custom_tasks/cleanup.yml

  tasks:
    - name: NR Meta Agent
      include_role:
        name: nr-meta-agent
        apply:
          environment:
            NRDOT_MODE: "{{ 'ROOT' if (install_mode is defined and install_mode == 'ROOT') | default(omit) }}"
      vars:
        repo_endpoint: "http://nr-downloads-ohai-staging.s3-website-us-east-1.amazonaws.com/limited_preview"
        target_version: "{{ nr_meta_agent_version }}"

    - name: Setup Infra Agent config
      include_role:
        name: infra-agent-config

    - name: Setup NR Otel Collector config
      include_role:
        name: nr-otel-collector-config

    - name: Assert version
      include_role:
        name: caos.ansible_roles.assert_version
      vars:
        target_versions:
          - exec: "nr-meta-agent --version"
            version: "{{ nr_meta_agent_version_real }}"
          - exec: "newrelic-infra --version"
            version: "{{ nr_infra_agent_version }}"
          - exec: "nr-otel-collector --version"
            version: "{{ nr_otel_collector_version }}"

- name: test agent behaviour on host shutdown
  hosts: testing_hosts_linux
  tasks:
    - name: pause a bit to let the infra-agent send some data
      pause:
        minutes: 1

    - name: restart the super agent
      include_role:
        name: agent-restart

    - name: pause for a bit to let the infra agent initialize
      pause:
        seconds: 30

    - name: Get entity id
      import_role:
        name: get_agent_entity_id

    - name: assert agent restart don't trigger shutdown event
      include_role:
        name: agent-host-status-event-assert
      vars:
        host_status: "shutdown"
        expect_change_event: false
        since_sec_ago: 30


    - name: stop instances
      include_role:
        name: ec2-stop

    - name: pause for a bit to let the event fire
      pause:
        seconds: 30

    - name: assert that the agent detecteded host shutdown and disconnected from the backend (only on hosts that support shutdown detection)
      include_role:
        name: agent-host-status-event-assert
      vars:
        host_status: "shutdown"
        expect_change_event: "{{ host_supports_shutdown_detection }}"
        timestamp_ref: "{{ ec2_stop_time_sec | int }}"

    - name: start instances
      include_role:
        name: ec2-start

    - name: assert the agent performed connect to the backend (only on hosts that support shutdown detection)
      include_role:
        name: agent-host-status-event-assert
      vars:
        host_status: "running"
        expect_change_event: "{{ host_supports_shutdown_detection }}"
        timestamp_ref: "{{ ec2_start_time_sec | int }}"

    - name: terminate instances
      include_role:
        name: ec2-terminate

    - name: pause for a bit to let the event fire
      pause:
        seconds: 30

    - name: assert that the agent detecteded host termination and disconnected from the backend (only on hosts that support shutdown detection)
      include_role:
        name: agent-host-status-event-assert
      vars:
        host_status: "shutdown"
        expect_change_event: "{{ host_supports_shutdown_detection }}"
        timestamp_ref: "{{ ec2_terminate_time_sec | int }}"

...
