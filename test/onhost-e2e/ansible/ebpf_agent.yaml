---
- name: Test eBPF Agent
  hosts: 127.0.0.1
  connection: local
  become: true
  gather_facts: yes

  tasks:
    - name: Test eBPF Agent
      block:
        - name: Cleanup
          include_tasks: ./tasks/clean_all.yaml

        # Currently eBPF Agent is not embedded in the AC package but installed along side it with the recipe.
        # NEW_RELIC_AGENT_CONTROL=true disables the systemd service so the Agent is controlled by AC.
        - name: Install eBPF Agent
          shell: |
            curl -Ls https://download.newrelic.com/install/newrelic-cli/scripts/install.sh | \
              bash && sudo \
              NEW_RELIC_CLI_SKIP_CORE=1 \
              NEW_RELIC_LICENSE_KEY={{ nr_license_key }} \
              NEW_RELIC_API_KEY={{ nr_api_key }} \
              NEW_RELIC_ACCOUNT_ID={{ nr_account_id }} \
              NEW_RELIC_REGION=US \
              NEW_RELIC_AGENT_CONTROL=true \
              /usr/local/bin/newrelic install -n ebpf-agent-installer
          register: out
        - debug:
            var: out.stdout_lines

        - name: Install Agent Control
          include_role:
            name: newrelic-agent-control

        - name: Register agent control version
          command: "/usr/bin/newrelic-agent-control --version"
          register: version

        - name: Assert version
          include_role:
            name: caos.ansible_roles.assert_version
          vars:
            target_versions:
              - exec: "/usr/bin/newrelic-agent-control --version"
                version: "{{ package_version }}"
          when: package_version | length > 0

        - name: Debug agent control version
          debug:
            var: version.stdout

        - name: Setup AC config
          include_role:
            name: edit_yaml_config
          vars:
            config_path: "/etc/newrelic-agent-control/config.yaml"
            update_config:
              log:
                format:
                  ansi_colors: true
                  target: true
                level: debug
              agents:
                nr-infra:
                  agent_type: "newrelic/com.newrelic.infrastructure:0.1.0"
                nr-ebpf:
                  agent_type: "newrelic/com.newrelic.ebpf:0.1.0"

        - name: Add license to service
          shell: echo 'NEW_RELIC_LICENSE_KEY="{{ nr_license_key }}"' >> {{ agent_control_service_conf }}

        - name: Set test identifier
          set_fact:
            test_id: "onhost-e2e-ebpf_{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}"

        - name: eBPF Agent config folder
          file:
            path: /etc/newrelic-agent-control/fleet/agents.d/nr-ebpf/values/
            state: directory

        - name: eBPF Agent local config
          copy:
            dest: /etc/newrelic-agent-control/fleet/agents.d/nr-ebpf/values/values.yaml
            content: |
              config_agent:
                DEPLOYMENT_NAME: {{ test_id }}

        # The infra-agent is used to generate traffic for ebpf metrics to appear.
        - name: Infra Agent config folder
          file:
            path: /etc/newrelic-agent-control/fleet/agents.d/nr-infra/values/
            state: directory

        - name: Infra Agent local config
          copy:
            dest: /etc/newrelic-agent-control/fleet/agents.d/nr-infra/values/values.yaml
            content: |
              config_agent: |+
                status_server_enabled: true
                status_server_port: 18003
                license_key: {{'{{'}}NEW_RELIC_LICENSE_KEY{{'}}'}}

        - name: Restart Agent Control
          include_role:
            name: caos.ansible_roles.service_status
          vars:
            service_name: "newrelic-agent-control"
            action: "restart"

        - name: Assert that the eBPF Agent is reporting data
          include_role:
            name: nrql_api_request
            apply:
              become: false
          vars:
            nrql_query: >-
              SELECT *
              FROM Metric
              WHERE metricName = 'ebpf.tcp.connection_duration'
              AND deployment.name = '{{ test_id }}'
              LIMIT 1
            retries: 60
            delay: 5

      always:
        - name: AC logs
          shell: journalctl -u newrelic-agent-control --no-pager
          register: ac_logs

        - name: Debug AC logs
          debug:
            var: ac_logs.stdout_lines

        - name: Cleanup
          include_tasks: ./tasks/clean_all.yaml
