---
- name: Install Agent Control on a system where Infra Agent is already installed.
  hosts: 127.0.0.1
  connection: local
  become: true
  gather_facts: yes

  tasks:
  - name: Install Agent Control on a system where Infra Agent is already installed.
    block:
      - name: Cleanup
        include_tasks: ./tasks/clean_all.yaml 
      
      - name: Set test identifier
        set_fact:
          test_id: "migration_infra_to_ac_{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M-%S') }}"

      - name: Install Infra Agent
        shell: |
          curl -Ls https://download.newrelic.com/install/newrelic-cli/scripts/install.sh | \
            bash && sudo \
            NEW_RELIC_CLI_SKIP_CORE=1 \
            NEW_RELIC_LICENSE_KEY={{ nr_license_key }} \
            NEW_RELIC_API_KEY={{ nr_api_key }} \
            NEW_RELIC_ACCOUNT_ID={{ nr_account_id }} \
            NEW_RELIC_REGION=US \
            /usr/local/bin/newrelic install -n infrastructure-agent-installer
        register: out
      - debug:
          var: out.stdout_lines

      - name: Change Infra Agent config
        copy:
          dest: /etc/newrelic-infra.yml
          content: |
            enable_process_metrics: true
            status_server_enabled: true
            status_server_port: 18003
            license_key: {{ nr_license_key }}

      - name: Install docker
        include_role:
          name: caos.ansible_roles.docker_install 
      
      #  docker run -d --rm --name some-mysql -p 3306:3306  -e MYSQL_ROOT_PASSWORD=root -d mysql:latest
      - name: Run mysql container
        community.docker.docker_container:
          name: "mysql"
          image: "mysql:latest"
          auto_remove: true
          detach: true
          ports:
            - "3306:3306"
          env:
            MYSQL_ROOT_PASSWORD: root

      - name: Install nri-mysql integration
        include_role:
          name: caos.ansible_roles.nri_mysql

      - name: Change Integrations config
        replace:
          path: "/etc/newrelic-infra/integrations.d/nri-mysql-config.yml"
          regexp: "name: nri-mysql"
          replace: |-
            name: nri-mysql
                labels:
                  test_id: {{ test_id }}
                  test_installed_agent: infra_agent

      - name: Restart Infra Agent
        include_role:
          name: caos.ansible_roles.service_status
        vars:
          service_name: newrelic-infra
          action: restart

      - name: Get metrics sent by nri-mysql
        include_role:
          name: nrql_api_request
          apply:
            become: false
        vars:
          nrql_query: >-
            SELECT *
            FROM MysqlSample
            WHERE label.test_id = '{{ test_id }}' AND label.test_installed_agent = 'infra_agent'
            LIMIT 1
          retries: 12
          delay: 5

      - name: Install Agent Control
        include_role:
          name: install_ac_recipe
        vars:
          fleet_enabled: "false"
          monitoring_source: "infra-agent"
      
      - name: Change installed agent label
        replace:
          path: /etc/newrelic-agent-control/fleet/agents.d/nr-infra/values/values.yaml
          regexp: "test_installed_agent: infra_agent"
          replace: "test_installed_agent: agent_control"

      - name: Restart Agent Control
        include_role:
          name: caos.ansible_roles.service_status
        vars:
          service_name: "newrelic-agent-control"
          action: "restart"

      - name: Get metrics sent by nri-mysql
        include_role:
          name: nrql_api_request
          apply:
            become: false
        vars:
          nrql_query: >-
            SELECT *
            FROM MysqlSample
            WHERE label.test_id = '{{ test_id }}' AND label.test_installed_agent = 'agent_control'
            LIMIT 1
          retries: 12
          delay: 5
