---

- name: test agent behaviour on host shutdown
  hosts: testing_hosts_linux
  become: true
  gather_facts: yes
  vars:
    process_user: "root"
    nr_infra_agent_version: "1.45.0"
    nr_otel_collector_version: "0.3.0"

  pre_tasks:
    - name: Update package repositories
      include_role:
        name: caos.ansible_roles.package_repo_update

    - name: Initial cleanup # Only required for shared infra.
      include_tasks: ./custom_tasks/cleanup.yml

  tasks:
    - name: Agent shutdown tests suite
      vars:

      block:

        - name: NR Super Agent
          include_role:
            name: newrelic-super-agent
            apply:
              environment:
                NRDOT_MODE: "{{ 'ROOT' if (install_mode is defined and install_mode == 'ROOT') | default(omit) }}"
          vars:
            repo_endpoint: "http://nr-downloads-ohai-staging.s3-website-us-east-1.amazonaws.com/preview"
            target_version: "{{ nr_super_agent_version }}"

        - name: Setup Infra Agent config
          include_role:
            name: infra-agent-config

        - name: restart Super Agent
          include_role:
            name: caos.ansible_roles.service_status
          vars:
            service_name: "newrelic-super-agent"
            action: "restart"

        - name: pause for a bit to let the infra agent initialize
          pause:
            seconds: 30

        - name: Get entity id
          include_role:
            name: caos.ansible_roles.infra_agent_get_entity_id

        - name: assert agent restart don't trigger shutdown event
          include_role:
            name: caos.ansible_roles.assert_host_status_event
          vars:
            host_status: "shutdown"
            expect_change_event: false
            since_sec_ago: 30

        - name: stop instances
          include_role:
            name: caos.ansible_roles.ec2_instance
            apply:
              become: false
          vars:
            action: stop
            instance_id: "{{ iid }}"

        - name: pause for a bit to let the event fire
          pause:
            seconds: 30

        - name: assert that the agent detected host shutdown and disconnected from the backend (only on hosts that support shutdown detection)
          include_role:
            name: caos.ansible_roles.assert_host_status_event
          vars:
            host_status: "shutdown"
            expect_change_event: "{{ host_supports_shutdown_detection }}"
            timestamp_ref: "{{ ec2_stop_time_sec | int }}"

        - name: start instances
          include_role:
            name: caos.ansible_roles.ec2_instance
            apply:
              become: false
          vars:
            action: start
            instance_id: "{{ iid }}"

        - name: assert the agent performed connect to the backend (only on hosts that support shutdown detection)
          include_role:
            name: caos.ansible_roles.assert_host_status_event
          vars:
            host_status: "running"
            expect_change_event: "{{ host_supports_shutdown_detection }}"
            timestamp_ref: "{{ ec2_start_time_sec | int }}"

        - name: terminate instances
          include_role:
            name: caos.ansible_roles.ec2_instance
            apply:
              become: false
          vars:
            action: terminate
            instance_id: "{{ iid }}"

        - name: pause for a bit to let the event fire
          pause:
            seconds: 30

        - name: assert that the agent detecteded host termination and disconnected from the backend (only on hosts that support shutdown detection)
          include_role:
            name: caos.ansible_roles.assert_host_status_event
          vars:
            host_status: "shutdown"
            expect_change_event: "{{ host_supports_shutdown_detection }}"
            timestamp_ref: "{{ ec2_terminate_time_sec | int }}"

      always:
        - name: Final cleanup # Only required for shared infra.
          include_tasks: ./custom_tasks/cleanup.yml

...
