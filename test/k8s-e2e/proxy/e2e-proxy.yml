description: E2E Test fleet control

custom_test_key: cluster_name

scenarios:
  - description: Deploy all infra agents
    before:
      # Deploys a Networkpolicy that forces all external req to go through the proxy in the current namespace.
      - kubectl apply -f ./proxy.yaml
      - kubectl wait --for=condition=complete --timeout=60s job/assert-policy-proxy
      # Deploy test scenario.
      - kubectl get secret sys-identity || kubectl create secret generic sys-identity --from-literal=CLIENT_ID="${NR_SYSTEM_IDENTITY_CLIENT_ID}" --from-literal=private_key="${NR_SYSTEM_IDENTITY_PRIVATE_KEY}"
      - cd ../../../ && SA_CHART_VALUES_FILE="test/k8s-e2e/proxy/ac-values-proxy.yml" CLUSTER=${SCENARIO_TAG} tilt ci
    after:
      - kubectl logs job/assert-policy-proxy
      - kubectl logs -l app=mitmproxy --all-containers --prefix=true
      - kubectl logs -l app.kubernetes.io/instance=prometheus --all-containers --prefix=true -n newrelic-agents
      - kubectl logs -l app.kubernetes.io/name=agent-control --all-containers --prefix=true
      - kubectl get secrets --show-labels
      - kubectl get all -o wide
      - kubectl get helmrelease
      - kubectl get helmchart
      - helm list -a -A
      - cd ../../../ && tilt down
    tests:
      nrqls:
        # Asserting that the Prom Agent sends metric to newrelic validates AC is able 
        # to communicate through the Proxy on all it's components.
        # Note that the Prometheus agent itself is not going through the proxy, as proxy
        # set-up of sub-agents is out of scope for AC. 
        - query: "FROM Metric SELECT * WHERE collector.name = 'prometheus-agent'"
