[package]
name = "newrelic_agent_control"
description = "New Relic Agent Control Limited Preview"
version = "0.32.0"
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
publish.workspace = true
default-run = "newrelic-agent-control"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
clap = { workspace = true, features = ["derive"] }
serde = { workspace = true, features = ["derive"] }
thiserror = { workspace = true }
nix = { workspace = true, features = ["signal", "user", "hostname"] }
tracing-subscriber = { workspace = true, features = ["env-filter", "chrono"] }
tracing = { workspace = true }
ctrlc = { version = "3.4.5", features = ["termination"] }
serde_yaml = { workspace = true }
regex = { workspace = true }
futures = { version = "0.3.31", optional = true }
tokio = { version = "1.41.1", features = ["rt-multi-thread", "macros", "sync"] }
console-subscriber = { version = "0.4.1", optional = true }
uuid = { version = "1.8.0", features = ["serde", "v7"] }
duration-str = "0.12.0"
konst = { workspace = true }
http = { workspace = true }
reqwest = { workspace = true }
url = { version = "2.5.4", features = ["serde"] }
actix-web = "4"
serde_json = { workspace = true }
semver = { workspace = true, features = ["serde"] }
chrono = { workspace = true }
base64 = { version = "0.22.1" }
# New Relic dependencies (private external repos)
# IMPORTANT: GitHub deployment keys are used to access these repos on the CI/CD pipelines
nr-auth = { git = "ssh://git@github.com/newrelic/newrelic-oauth-client-rs.git", tag = "0.0.3" }
opamp-client = { git = "ssh://git@github.com/newrelic/opamp-rs.git", tag = "0.0.27", default-features = false }
# local dependencies
fs = { path = "../fs" }

# OnHost subagent dependencies
# IMPORTANT: All onhost only deps needs to be `optional = true` so they won't be compiled by default
resource-detection = { path = "../resource-detection" }

# K8S subagent dependencies
# IMPORTANT: All k8s only deps needs to be `optional = true` so they won't be compiled by default
kube = { version = "0.98.0", features = ["runtime", "derive"], optional = true }
k8s-openapi = { version = "0.24.0", features = ["v1_30"], optional = true }
either = { version = "1.12.0", optional = true }


crossbeam = { version = "0.8.4", features = ["crossbeam-channel"] }
tracing-appender = "0.2.3"
cfg-if = "1.0.0"
# HOST_ID and HOST_NAME attributes are experimental fields and after 0.26.0 are not included by default.
# Check <https://github.com/open-telemetry/opentelemetry-rust/pull/2098> for details.
opentelemetry-semantic-conventions = { version = "0.27.0", features = ["semconv_experimental"] }
http-serde = "2.1.1"
paste = "1.0"
config = { version = "0.15.7", features = ["yaml"] }
rustls = { version = "0.23.18", features = ["ring"] }
webpki = { version = "0.22.4", features = ["alloc"] }
x509-parser = "0.17.0"
ring = "0.17.8"

[dev-dependencies]
assert_cmd = { workspace = true }
assert_fs = { workspace = true }
predicates = { workspace = true }
tower-test = { workspace = true }
tempfile = { workspace = true }
mockall = { workspace = true }
schemars = { workspace = true }
serde_json = { workspace = true }
assert_matches = { workspace = true }
mockall_double = { workspace = true }
tracing-test = { workspace = true }
jsonwebtoken = { workspace = true }
fs = { path = "../fs", features = ["mocks"] }
tokio = { version = "1.37.0", features = ["rt-multi-thread", "macros"] }
fake = { version = "3.1.0", features = ["derive", "http"] }
prost = "0.13.3"
# Alpha version needed to test proxy the feature, it is safe because it is only used as dev-dependency
httpmock = { version = "0.8.0-alpha.1", features = ["proxy"] }
serial_test = "3.1.1"
futures = "0.3.30"
rcgen = { version = "0.13.2", features = ["crypto"] }
rustls-pemfile = { version = "2.1.3" }


[build-dependencies]
glob = "0.3.1"

[[bin]]
name = "newrelic-agent-control"
path = "src/bin/main.rs"

[[bin]]
required-features = ["onhost"]
name = "newrelic-config-migrate"
path = "src/bin/config_migrate.rs"

[features]
onhost = []
k8s = [
  "dep:kube",
  "dep:k8s-openapi",
  "dep:either",
  "dep:futures",
]
# feature ci allows calling --all-features (needed on the test pipelines) and not failing to compile
ci = []
# feature tokio-console allows debugging tokio tasks using tokio-console
tokio-console = ["tokio/full", "tokio/tracing", "dep:console-subscriber"]
# feature multiple-instances avoids checking if more than one agent-control process is running at a time
multiple-instances = []
