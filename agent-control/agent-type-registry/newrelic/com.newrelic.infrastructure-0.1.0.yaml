namespace: newrelic
name: com.newrelic.infrastructure
version: 0.1.0
variables:
  on_host:
    config_agent:
      description: "Newrelic infra configuration"
      type: file
      required: false
      default: ""
      file_path: "newrelic-infra.yml"
    config_integrations:
      description: "map of YAML configs for the OHIs"
      type: map[string]file
      required: false
      default: { }
      file_path: "integrations.d"
    config_logging:
      description: "map of YAML config for logging"
      type: map[string]file
      required: false
      default: { }
      file_path: "logging.d"
    backoff_delay:
      description: "seconds until next retry if agent fails to start"
      type: string
      required: false
      default: 20s
    enable_file_logging:
      description: "enable logging the on host executables' logs to files"
      type: bool
      required: false
      default: false
    health_port:
      description: "port for the Infra Agent status server"
      type: number
      required: false
      default: 18003
  k8s:
    chart_values:
      newrelic-infrastructure:
        description: "newrelic-infrastructure chart values"
        type: yaml
        required: false
        default: { }
      nri-metadata-injection:
        description: "nri-metadata-injection chart values"
        type: yaml
        required: false
        default: { }
      kube-state-metrics:
        description: "kube-state-metrics chart values"
        type: yaml
        required: false
        default: { }
      nri-kube-events:
        description: "nri-kube-events chart values"
        type: yaml
        required: false
        default: { }
      global:
        description: "Global chart values"
        type: yaml
        required: false
        default: { }
    chart_version:
      description: "nri-bundle chart version"
      type: string
      required: true
deployment:
  on_host:
    enable_file_logging: ${nr-var:enable_file_logging}
    health:
      interval: 5s
      timeout: 5s
      http:
        path: "/v1/status/health"
        port: ${nr-var:health_port}
    executable:
      path: /usr/bin/newrelic-infra
      args: >-
        --config=${nr-var:config_agent}
      env:
        NRIA_PLUGIN_DIR: "${nr-var:config_integrations}"
        NRIA_LOGGING_CONFIGS_DIR: "${nr-var:config_logging}"
        NRIA_STATUS_SERVER_ENABLED: true
        NRIA_STATUS_SERVER_PORT: "${nr-var:health_port}"
        NR_HOST_ID: "${nr-ac:host_id}"
      restart_policy:
        backoff_strategy:
          type: fixed
          backoff_delay: ${nr-var:backoff_delay}
  k8s:
    health:
      interval: 30s
    objects:
      repository:
        apiVersion: source.toolkit.fluxcd.io/v1
        kind: HelmRepository
        metadata:
          name: ${nr-sub:agent_id}
          namespace: ${nr-ac:namespace}
        spec:
          # Increasing the interval to 30 minutes because the HelmRepository is not as prone to frequent changes
          # as HelmRelease objects might be. Given repositories typically have fewer updates than the resources
          # they trigger, a longer interval helps in reducing unnecessary load on the cluster without significantly
          # delaying the application of important updates.
          interval: 30m
          provider: generic
          url: https://helm-charts.newrelic.com
      default-values:
        apiVersion: v1
        kind: Secret
        metadata:
          name: default-values-${nr-sub:agent_id}
          namespace: ${nr-ac:namespace}
        stringData:
          values.yaml: |
            newrelic-infrastructure:
              enabled: true
            nri-metadata-injection:
              enabled: true
            kube-state-metrics:
              enabled: true
            nri-kube-events:
              enabled: true
            global:
              licenseKey: ${nr-env:NR_LICENSE_KEY}
              cluster: ${nr-env:NR_CLUSTER_NAME}
              nrStaging: ${nr-env:NR_STAGING}
              lowDataMode: ${nr-env:NR_LOW_DATA_MODE}
              verboseLog: ${nr-env:NR_VERBOSE_LOG}
      release:
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: ${nr-sub:agent_id}
          namespace: ${nr-ac:namespace}
        spec:
          interval: 3m
          targetNamespace: ${nr-ac:namespace_agents}
          releaseName: ${nr-sub:agent_id}
          chart:
            spec:
              chart: nri-bundle
              version: ${nr-var:chart_version}
              reconcileStrategy: ChartVersion
              sourceRef:
                kind: HelmRepository
                name: ${nr-sub:agent_id}
              interval: 3m
          install:
            # Wait are disabled to avoid blocking the modifications/deletions of this CR while in reconciling state.
            disableWait: true
            disableWaitForJobs: true
            disableTakeOwnership: true
            createNamespace: true
            remediation:
              retries: 3
            replace: true
          upgrade:
            disableWait: true
            disableWaitForJobs: true
            disableTakeOwnership: true
            cleanupOnFail: true
            force: true
            remediation:
              retries: 3
              strategy: rollback
          rollback:
            disableWait: true
            disableWaitForJobs: true
          valuesFrom:
            - kind: Secret
              name: default-values-${nr-sub:agent_id}
              valuesKey: values.yaml
          values:
            newrelic-infrastructure: ${nr-var:chart_values.newrelic-infrastructure}
            nri-metadata-injection: ${nr-var:chart_values.nri-metadata-injection}
            kube-state-metrics: ${nr-var:chart_values.kube-state-metrics}
            nri-kube-events: ${nr-var:chart_values.nri-kube-events}
            global: ${nr-var:chart_values.global}

            # The rest of nri-bundle charts are explicitly disabled below.
            # Note: this needs to be in sync with nri-bundle's supported charts. If a new version of
            # nri-bundle included a new chart enabled by default, it needs to be disabled here.
            nri-prometheus:
              enabled: false
            newrelic-logging:
              enabled: false
            newrelic-pixie:
              enabled: false
            k8s-agents-operator:
              enabled: false
            pixie-chart:
              enabled: false
            newrelic-infra-operator:
              enabled: false
            newrelic-prometheus-agent:
              enabled: false
            newrelic-k8s-metrics-adapter:
              enabled: false
