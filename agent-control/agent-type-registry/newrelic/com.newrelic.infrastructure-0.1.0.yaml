namespace: newrelic
name: com.newrelic.infrastructure
version: 0.1.0
variables:
  on_host:
    config_agent:
      description: "Newrelic infra configuration"
      type: yaml
      required: false
      default: ""
    config_integrations:
      description: "map of YAML configs for the OHIs"
      type: map[string]yaml
      required: false
      default: {}
    config_logging:
      description: "map of YAML config for logging"
      type: map[string]yaml
      required: false
      default: {}
    backoff_delay:
      description: "seconds until next retry if agent fails to start"
      type: string
      required: false
      default: 20s
    enable_file_logging:
      description: "enable logging the on host executables' logs to files"
      type: bool
      required: false
      default: false
    health_port:
      description: "port for the Infra Agent status server"
      type: number
      required: false
      default: 18003
  k8s:
    # HelmChart based sub agents should always have `chart_values`.
    chart_values:
      # Chart values should always must go under a key that has the chart name.
      # In this case there are multiple sub-charts so each key is the sub-chart name.
      # chart_values:
      #   <chart name>: {values of the sub chart}
      #   global: {}
      newrelic-infrastructure:
        description: "newrelic-infrastructure chart values"
        type: yaml
        required: false
        default: {}
      nri-metadata-injection:
        description: "nri-metadata-injection chart values"
        type: yaml
        required: false
        default: {}
      kube-state-metrics:
        description: "kube-state-metrics chart values"
        type: yaml
        required: false
        default: {}
      nri-kube-events:
        description: "nri-kube-events chart values"
        type: yaml
        required: false
        default: {}
      # Global values must have their own key, even if there is only one sub-chart.
      global:
        description: "Global chart values"
        type: yaml
        required: false
        default: {}
    # HelmChart based sub agents should always have `chart_version`.
    chart_version:
      description: "nri-bundle chart version"
      type: string
      required: true
    chart_name:
      description: "nri-bundle chart name"
      type: string
      required: false
      default: "nri-bundle"
    chart_repository:
      url:
        description: "chart repository url"
        type: string
        required: false
        default: "https://helm-charts.newrelic.com"
        # For security reasons, the chart repository URL must be allow-listed.
        variants:
          ac_config_field: "chart_repository_urls"
          values: ["https://helm-charts.newrelic.com"]
      secret_reference:
        description: "HelmRepository secret reference (secretRef)"
        type: yaml
        required: false
        # Flux doesn't allow an empty secretRef field
        default: null
      certificate_secret_reference:
        description: "HelmRepository certificate secret reference (certSecretRef)"
        type: yaml
        required: false
        default: null

deployment:
  on_host:
    enable_file_logging: ${nr-var:enable_file_logging}
    health:
      interval: 5s
      initial_delay: 5s
      timeout: 5s
      http:
        path: "/v1/status/health"
        port: ${nr-var:health_port}
    version:
      path: /usr/bin/newrelic-infra
      args: --version
      regex: \d+\.\d+\.\d+
    filesystem:
      config:
        newrelic-infra.yaml: |
          ${nr-var:config_agent}
      integrations.d: ${nr-var:config_integrations}
      logging.d: ${nr-var:config_logging}
    executables:
      - id: newrelic-infra
        path: /usr/bin/newrelic-infra
        args: >-
          --config=${nr-sub:autogenerated_agent_dir}/config/newrelic-infra.yaml
        env:
          NRIA_PLUGIN_DIR: "${nr-sub:autogenerated_agent_dir}/integrations.d"
          NRIA_LOGGING_CONFIGS_DIR: "${nr-sub:autogenerated_agent_dir}/logging.d"
          NRIA_STATUS_SERVER_ENABLED: true
          NRIA_STATUS_SERVER_PORT: "${nr-var:health_port}"
          NR_HOST_ID: "${nr-ac:host_id}"
        restart_policy:
          backoff_strategy:
            type: fixed
            backoff_delay: ${nr-var:backoff_delay}
  k8s:
    health:
      interval: 30s
      initial_delay: 30s
    objects:
      # Flux [HelmRepository](https://fluxcd.io/flux/components/source/helmrepositories/).
      repository:
        apiVersion: source.toolkit.fluxcd.io/v1
        kind: HelmRepository
        metadata:
          # The agent-id is a unique identifier. It is used to have an expected name without collision between agents.
          name: ${nr-sub:agent_id}
          # All resources directly managed by AC are expected to be created in the same ns where AC is installed.
          namespace: ${nr-ac:namespace}
        spec:
          # Increasing the interval to 30 minutes because the HelmRepository is not as prone to frequent changes
          # as HelmRelease objects might be. Given repositories typically have fewer updates than the resources
          # they trigger, a longer interval helps in reducing unnecessary load on the cluster without significantly
          # delaying the application of important updates.
          interval: 30m
          # This value gets rendered when not specified, with "generic" as the default value.
          # If we don't set the value explicitly here, in the agent type, the AC supervisor will detect
          # a configuration drift and trigger the re-apply of the config in each interval.
          # We want to avoid it, so we set it explicitly.
          provider: generic
          url: ${nr-var:chart_repository.url}
          secretRef: ${nr-var:chart_repository.secret_reference}
          certSecretRef: ${nr-var:chart_repository.certificate_secret_reference}
      # Creates HelmCharts values inside Secrets to avoid exposing any sensible information.
      values:
        apiVersion: v1
        kind: Secret
        metadata:
          name: values-${nr-sub:agent_id}
          namespace: ${nr-ac:namespace}
        stringData:
          # These values contains default configuration that can be inherited from AC chart values,
          # enhancing user experience when deploying sub-agents with minimal configuration.
          # The env vars defined here are mounted into the AC pod.
          default.yaml: |
            newrelic-infrastructure:
              enabled: true
            nri-metadata-injection:
              enabled: true
            kube-state-metrics:
              enabled: true
            nri-kube-events:
              enabled: true
            global:
              licenseKey: ${nr-env:NR_LICENSE_KEY}
              cluster: ${nr-env:NR_CLUSTER_NAME}
              nrStaging: ${nr-env:NR_STAGING}
              lowDataMode: ${nr-env:NR_LOW_DATA_MODE}
              verboseLog: ${nr-env:NR_VERBOSE_LOG}
          # These values are the ones that are expected to be configured by the user.
          values.yaml: |
            newrelic-infrastructure: 
              ${nr-var:chart_values.newrelic-infrastructure | indent 2}
            nri-metadata-injection: 
              ${nr-var:chart_values.nri-metadata-injection | indent 2}
            kube-state-metrics: 
              ${nr-var:chart_values.kube-state-metrics | indent 2}
            nri-kube-events: 
              ${nr-var:chart_values.nri-kube-events | indent 2}
            global: 
              ${nr-var:chart_values.global | indent 2}
          # The rest of nri-bundle charts are explicitly disabled below.
          # Note: this needs to be in sync with nri-bundle's supported charts. If a new version of
          # nri-bundle included a new chart enabled by default, it needs to be disabled here.
          fixed.yaml: |
            nri-prometheus:
              enabled: false
            newrelic-logging:
              enabled: false
            newrelic-pixie:
              enabled: false
            k8s-agents-operator:
              enabled: false
            pixie-chart:
              enabled: false
            newrelic-infra-operator:
              enabled: false
            newrelic-prometheus-agent:
              enabled: false
            newrelic-k8s-metrics-adapter:
              enabled: false
      # Flux [HelmRelease](https://fluxcd.io/flux/components/helmreleases/) that installs the nri-bundle chart.
      release:
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: ${nr-sub:agent_id}
          namespace: ${nr-ac:namespace}
        spec:
          # sub-agent charts workloads are installed under a different namespace for security reasons.
          targetNamespace: ${nr-ac:namespace_agents}
          # The agent-id is a unique identifier. It is used to have an expected name without collision between agents.
          releaseName: ${nr-sub:agent_id}
          # An small interval has chosen to provide a faster feedback to values upgrades and HelmChart status errors.
          # This is the interval at which any change in the chart values defined at the values-${nr-sub:agent_id} secret is re-applied.
          # We also have detected that whenever there is an not-ready condition at the HelmChart (Flux CR) it doesn't get updated into
          # the HelmRelease Status until one interval has finish.
          interval: 30s
          # Reference to the created HelmRepository.
          chart:
            spec:
              chart: ${nr-var:chart_name}
              # This is where the chart version to be installed is defined. Whenever AC updates this Flux triggers a reconciliation.
              version: ${nr-var:chart_version}
              # This value gets rendered even if not specified so, even 'ChartVersion' is the default, it is required to specify
              # it to avoid the drift detection on AC supervisor, and trigger re-apply on each interval.
              reconcileStrategy: ChartVersion
              sourceRef:
                kind: HelmRepository
                name: ${nr-sub:agent_id}
                namespace: ${nr-ac:namespace}
              interval: 3m
          install:
            # Wait are disabled to avoid blocking the modifications/deletions of this CR while in reconciling state.
            # Having this disable is equal to execute a `helm install` without the `--wait` flag.
            # AC has it's own health check system that will flag the status of the installed chart.
            disableWait: true
            disableWaitForJobs: true
            # We fail installing if there are resources matching the same name that are owned by another release.
            disableTakeOwnership: true
            # This makes Flux create the agents namespace for AC (i.e. targetNamespace), if it doesn't exist.
            createNamespace: true
          upgrade:
            # Same as the installation phase, waits are disabled.
            disableWait: true
            disableWaitForJobs: true
            disableTakeOwnership: true
            cleanupOnFail: true
          # The values are applied in order, so latest always have precedence.
          valuesFrom:
            - kind: Secret
              name: values-${nr-sub:agent_id}
              valuesKey: default.yaml
            - kind: Secret
              name: values-${nr-sub:agent_id}
              valuesKey: values.yaml
            - kind: Secret
              name: values-${nr-sub:agent_id}
              valuesKey: fixed.yaml
