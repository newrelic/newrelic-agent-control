namespace: newrelic
name: io.opentelemetry.collector
version: 0.1.0
variables:
  on_host:
    config:
      description: "Newrelic otel collector configuration"
      type: file
      required: false
      default: ""
      file_path: "config.yaml"
    backoff_delay:
      description: "seconds until next retry if agent fails to start"
      type: string
      required: false
      default: 20s
    health_check:
      # Note the configs added here must align with the health check extension being used on the collector config variable.
      # See https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/healthcheckv2extension/README.md#configuration
      # For more details
      path:
        description: "path to health check endpoint"
        type: string
        required: false
        default: "/health/status" # Taken from example at: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/healthcheckv2extension/README.md#configuration
      port:
        description: "port to health check endpoint"
        type: number
        required: false
        default: 13133
  k8s:
    chart_values:
      nr-k8s-otel-collector:
        description: "Newrelic otel collector chart values"
        type: yaml
        required: false
        default: { }
      global:
        description: "Global values for the chart"
        type: yaml
        required: false
        default: { }
    chart_version:
      description: "Newrelic otel collector chart version"
      type: string
      required: true
deployment:
  on_host:
    health:
      interval: 5s
      initial_delay: 5s
      timeout: 5s
      http:
        path: "${nr-var:health_check.path}"
        port: ${nr-var:health_check.port}
    executable:
      # Important to note the binary name is nrdot-collector-host matching the new nrdot binary
      path: /usr/bin/nrdot-collector-host
      args: >-
        --config=${nr-var:config}
        --feature-gates=-pkg.translator.prometheus.NormalizeName
      env:
        # sets the otel-collector "env" source resource detector 
        OTEL_RESOURCE_ATTRIBUTES: "host.id=${nr-ac:host_id}"
      restart_policy:
        backoff_strategy:
          type: fixed
          backoff_delay: ${nr-var:backoff_delay}
  # See com.newrelic.infrastructure Agent type for description of fields.
  k8s:
    health:
      interval: 30s
      initial_delay: 30s
    objects:
      repository:
        apiVersion: source.toolkit.fluxcd.io/v1
        kind: HelmRepository
        metadata:
          name: ${nr-sub:agent_id}
          namespace: ${nr-ac:namespace}
        spec:
          interval: 30m
          provider: generic
          url: https://helm-charts.newrelic.com
      values:
        apiVersion: v1
        kind: Secret
        metadata:
          name: values-${nr-sub:agent_id}
          namespace: ${nr-ac:namespace}
        stringData:
          default.yaml: |
            global:
              licenseKey: ${nr-env:NR_LICENSE_KEY}
              cluster: ${nr-env:NR_CLUSTER_NAME}
              nrStaging: ${nr-env:NR_STAGING}
              lowDataMode: ${nr-env:NR_LOW_DATA_MODE}
              verboseLog: ${nr-env:NR_VERBOSE_LOG}
          values.yaml: |
            ${nr-var:chart_values.nr-k8s-otel-collector}
          # chart_values.global will have precedence over chart_values.nr-k8s-otel-collector.global
          global.yaml: |
            global:
              ${nr-var:chart_values.global | indent 2}
      release:
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: ${nr-sub:agent_id}
          namespace: ${nr-ac:namespace}
        spec:
          targetNamespace: ${nr-ac:namespace_agents}
          releaseName: ${nr-sub:agent_id}
          interval: 30s
          chart:
            spec:
              chart: nr-k8s-otel-collector
              version: ${nr-var:chart_version}
              reconcileStrategy: ChartVersion
              sourceRef:
                kind: HelmRepository
                name: ${nr-sub:agent_id}
                namespace: ${nr-ac:namespace}
              interval: 3m
          install:
            disableWait: true
            disableWaitForJobs: true
            disableTakeOwnership: true
            replace: true
            createNamespace: true
          upgrade:
            disableWait: true
            disableWaitForJobs: true
            disableTakeOwnership: true
            cleanupOnFail: true
            force: true
          valuesFrom:
            - kind: Secret
              name: values-${nr-sub:agent_id}
              valuesKey: default.yaml
            - kind: Secret
              name: values-${nr-sub:agent_id}
              valuesKey: values.yaml
            - kind: Secret
              name: values-${nr-sub:agent_id}
              valuesKey: global.yaml
