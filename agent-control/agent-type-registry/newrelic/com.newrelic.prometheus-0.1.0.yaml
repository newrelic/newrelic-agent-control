namespace: newrelic
name: com.newrelic.prometheus
version: 0.1.0
variables:
  common:
    enable_debug:
      description: "Enable debug mode for the Prometheus agent"
      type: bool
      required: false
      default: false
    scrape_interval:
      description: "Default scrape interval for Prometheus targets"
      type: string
      required: false
      default: "30s"
  k8s:
    chart_values:
      newrelic-prometheus-agent:
        description: "Newrelic newrelic-prometheus-agent chart values"
        type: yaml
        required: false
        default: { }
      global:
        description: "Global chart values"
        type: yaml
        required: false
        default: { }
    chart_version:
      description: "newrelic-prometheus chart version"
      type: string
      required: true
deployment:
  # See com.newrelic.infrastructure Agent type for description of fields.
  k8s:
    health:
      interval: 30s
      initial_delay: 30s
    objects:
      repository:
        apiVersion: source.toolkit.fluxcd.io/v1
        kind: HelmRepository
        metadata:
          name: ${nr-sub:agent_id}
          namespace: ${nr-ac:namespace}
        spec:
          interval: 30m
          provider: generic
          url: https://newrelic.github.io/newrelic-prometheus-configurator
      values:
        apiVersion: v1
        kind: Secret
        metadata:
          name: values-${nr-sub:agent_id}
          namespace: ${nr-ac:namespace}
        stringData:
          default.yaml: |
            global:
              licenseKey: ${nr-env:NR_LICENSE_KEY}
              cluster: ${nr-env:NR_CLUSTER_NAME}
              nrStaging: ${nr-env:NR_STAGING}
              lowDataMode: ${nr-env:NR_LOW_DATA_MODE}
              verboseLog: ${nr-env:NR_VERBOSE_LOG}
              {{if enable_debug}}
              # Debug configuration is applied when enable_debug is true
              debug:
                enabled: true
                level: "debug"
                logFormat: "json"
              {{end}}
          values.yaml: |
            ${nr-var:chart_values.newrelic-prometheus-agent}
            {{if enable_debug}}
            # Additional debug configurations
            prometheus:
              config:
                scrape_interval: ${nr-var:scrape_interval}
                evaluation_interval: 15s
                log_level: debug
            {{else}}
            # Standard production configurations
            prometheus:
              config:
                scrape_interval: ${nr-var:scrape_interval}
                evaluation_interval: 30s
                log_level: info
            {{end}}
          # chart_values.global will have precedence over chart_values.newrelic-prometheus-agent.global
          global.yaml: |
            global:
              ${nr-var:chart_values.global | indent 2}
      release:
        apiVersion: helm.toolkit.fluxcd.io/v2
        kind: HelmRelease
        metadata:
          name: ${nr-sub:agent_id}
          namespace: ${nr-ac:namespace}
        spec:
          targetNamespace: ${nr-ac:namespace_agents}
          releaseName: ${nr-sub:agent_id}
          interval: 30s
          chart:
            spec:
              chart: newrelic-prometheus-agent
              version: ${nr-var:chart_version}
              reconcileStrategy: ChartVersion
              sourceRef:
                kind: HelmRepository
                name: ${nr-sub:agent_id}
                namespace: ${nr-ac:namespace}
              interval: 3m
          install:
            disableWait: true
            disableWaitForJobs: true
            disableTakeOwnership: true
            replace: true
            createNamespace: true
          upgrade:
            disableWait: true
            disableWaitForJobs: true
            disableTakeOwnership: true
            cleanupOnFail: true
            force: true
          valuesFrom:
            - kind: Secret
              name: values-${nr-sub:agent_id}
              valuesKey: default.yaml
            - kind: Secret
              name: values-${nr-sub:agent_id}
              valuesKey: values.yaml
            - kind: Secret
              name: values-${nr-sub:agent_id}
              valuesKey: global.yaml
