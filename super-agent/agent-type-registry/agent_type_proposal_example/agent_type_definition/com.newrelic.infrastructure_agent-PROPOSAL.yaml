namespace: newrelic
name: com.newrelic.infrastructure_agent
version: 0.1.3
on_host:
  configs:
    "newrelic-infra":
      description: "Newrelic infra configuration"
      type: file
      required: false
      default: ""
      content_type: yaml
    config_logging:
      #  config_logging/cups
      #  config_logging/systemd
      description: "map of YAML config for logging"
      type: directory
      required: false
      default: {}
      file_path: "logging.d"
      content_type: yaml
  deployment_config:
    integrations_folder:
      description: "folder with integrations configurations"
      type: string
      read_only: true
      default: "${nr-autogenerated}/integrations.d"
    backoff_delay:
      description: "seconds until next retry if agent fails to start"
      type: string
      required: false
      default: 20s
    enable_file_logging:
      description: "enable logging the on host executables' logs to files"
      type: bool
      required: false
      default: false
    health_port:
      description: "port for the Infra Agent status server"
      type: number
      required: false
      default: 18003
    agent_version:
      description: "version of the agent"
      type: string
      required: true
  download:
    location: "https://download.newrelic.com/infra_agent/[arch/os/os_version]/infra_agent.tar.gz"
    package_version: ${nr-var:agent_version}
  install:
    type: tar
    artifacts:
      infra_agent:
        source_path: "[inside-tar]/usr/bin/newrelic-infrastructure"
  bootstrap:
    enable_file_logging: ${nr-var:enable_file_logging}
    global_health: {}
    executables:
      - path: ${nr-pkg:infra_agent}
        args: "--config=${nr-var:newrelic-infra}"
        env: "NRIA_PLUGIN_DIR=${integrations_folder} NRIA_LOGGING_CONFIGS_DIR=${nr-var:config_logging} NRIA_STATUS_SERVER_ENABLED=true NRIA_STATUS_SERVER_PORT=${nr-var:health_port}"
        restart_policy:
          backoff_strategy:
            type: fixed
            backoff_delay: ${nr-var:backoff_delay}
        health:
          interval: 5s
          timeout: 5s
          http:
            path: "/v1/status"
            port: ${nr-var:health_port}

k8s:
  config:
  deployment_config:
  deployment:
    ...
