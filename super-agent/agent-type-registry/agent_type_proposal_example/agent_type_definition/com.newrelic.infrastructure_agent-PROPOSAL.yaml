namespace: newrelic
name: com.newrelic.infrastructure_agent
version: 0.1.3
configs:
  "newrelic-infra":
    description: "Newrelic infra configuration"
    type: file
    required: false
    default: ""
    content_type: yaml
  config_logging:
    description: "map of YAML config for logging"
    type: directory
    required: false
    default: {}
    file_path: "logging.d"
    content_type: yaml
deployment_config:
  # TODO: What shall we do with logging folder to be exported to
  # be used by dependencies?
  # is it a deployment config?
  # another example in exports as this is not really a variable
  logging_folder:
    description: "folder with logging configurations"
    type: string
    required: false
    public: false
    default: "${nr-var:agent_autogenerated_folder}/logging.d"
  backoff_delay:
    description: "seconds until next retry if agent fails to start"
    type: string
    required: false
    default: 20s
  enable_file_logging:
    description: "enable logging the on host executables' logs to files"
    type: bool
    required: false
    default: false
  health_port:
    description: "port for the Infra Agent status server"
    type: number
    required: false
    default: 18003
exports:
  # TODO: What shall we do with logging folder to be exported to
  # be used by dependencies?
  # is it a deployment config?
  logging_folder:
    description: "folder with logging configurations"
    default: "${nr-var:agent_autogenerated_folder}/logging.d"
deployment:
  on_host:
    enable_file_logging: ${nr-var:enable_file_logging}
    executables:
      - path: /usr/bin/newrelic-infra
        args: "--config=${nr-var:newrelic-infra}"
        env: "NRIA_PLUGIN_DIR=${logging_folder} NRIA_LOGGING_CONFIGS_DIR=${nr-var:config_logging} NRIA_STATUS_SERVER_ENABLED=true NRIA_STATUS_SERVER_PORT=${nr-var:health_port}"
        restart_policy:
          backoff_strategy:
            type: fixed
            backoff_delay: ${nr-var:backoff_delay}
        health:
          interval: 5s
          timeout: 5s
          http:
            path: "/v1/status"
            port: ${nr-var:health_port}
