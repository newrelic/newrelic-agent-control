[package]
name = "newrelic_super_agent"
description = "New Relic Super Agent Limited Preview"
version = "0.16.0"
edition = "2021"
authors = ["The New Relic Core Agent & Open Standards (CAOS) Team"]
publish = false
default-run = "newrelic-super-agent"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
clap = { workspace = true, features = ["derive"] }
serde = { workspace = true, features = ["derive"] }
thiserror = { workspace = true }
nix = { workspace = true, features = ["signal", "user", "hostname"] }
tracing-subscriber = { workspace = true, features = ["env-filter", "chrono"] }
tracing = { workspace = true }
ctrlc = { version = "3.4.4", features = ["termination"] }
serde_yaml = { workspace = true }
regex = { workspace = true }
opamp-client = { git = "ssh://git@github.com/newrelic/opamp-rs.git", tag = "0.0.19", features = ["sync-http"], default-features = false }
futures = { version = "0.3.30", optional = true }
async-trait = { version = "0.1.80", optional = true }
tokio = { version = "1.37.0", features = ["rt-multi-thread", "macros", "sync"] }
uuid = { version = "1.8.0", features = ["serde", "v7"] }
duration-str = "0.7.1"
konst = { workspace = true }
http = { workspace = true }
ureq = { workspace = true, features = ["http-crate"] }
url = { version = "2.5.0", features = ["serde"] }
actix-web = "4"
serde_json = { workspace = true }
semver = { workspace = true, features = ["serde"] }
chrono = { workspace = true }
# local dependencies
fs = { path = "../fs" }
nr-auth = { path = "../nr-auth" }

# OnHost subagent dependencies
# IMPORTANT: All onhost only deps needs to be `optional = true` so they won't be compiled by default
resource-detection = { path = "../resource-detection" }

# K8S subagent dependencies
# IMPORTANT: All k8s only deps needs to be `optional = true` so they won't be compiled by default
kube = { version = "0.91.0", features = ["runtime", "derive"], optional = true }
k8s-openapi = { version = "0.22.0", features = ["v1_29"], optional = true }
either = { version = "1.12.0", optional = true }
crossbeam = { version = "0.8.4", features = ["crossbeam-channel"] }
tracing-appender = "0.2.3"
cfg-if = "1.0.0"
opentelemetry-semantic-conventions = "0.14.0"
http-serde = "2.1.1"
paste = "1.0"
config = { version = "0.14.0", features = ["yaml"] }

[dev-dependencies]
assert_cmd = { workspace = true }
assert_fs = { workspace = true }
bollard = { workspace = true }
predicates = { workspace = true }
tower-test = { workspace = true }
hyper = { workspace = true }
tempfile = { workspace = true }
mockall = { workspace = true }
schemars = { workspace = true }
serde_json = { workspace = true }
assert_matches = { workspace = true }
mockall_double = { workspace = true }
tracing-test = { workspace = true }
jsonwebtoken = { workspace = true }
fs = { path = "../fs", features = ["mocks"] }
tokio = { version = "1.37.0", features = ["rt-multi-thread", "macros"] }
wiremock = "0.6.0"
fake = { version = "2.9.2", features = ["derive", "http"] }
prost = "0.12.6"
httpmock = "0.7.0"
serial_test = "3.1.1"
futures = "0.3.30"

[build-dependencies]
glob = "0.3.1"

[[bin]]
name = "newrelic-super-agent"
path = "src/bin/main.rs"

[features]
onhost = []
k8s = [
  "dep:kube",
  "dep:k8s-openapi",
  "dep:either",
  "dep:futures",
  "dep:async-trait",
]
# feature ci allows calling --all-features (needed on the test pipelines) and not failing to compile
ci = []
