# Tiltfile

# Define the path to the local YAML file
configmap_yaml = 'ac-config-tilt.yaml'

# Load the YAML file and apply it to the cluster
k8s_yaml(configmap_yaml)

# Define a local resource that watches the YAML file for changes
# local_resource(
#     'update-configmap',
#     'kubectl apply -f ' + configmap_yaml,
#     deps=[configmap_yaml]
# )

load('ext://helm_resource', 'helm_repo','helm_resource')

# Flux chart
helm_repo(
'newrelic',
'https://helm-charts.newrelic.com',
resource_name='newrelic-helm-repo',
)
helm_resource(
  'flux',
  'newrelic/super-agent',
  namespace='default',
  release_name='flux-tilt',
  update_dependencies=False,
  flags=[
    '--create-namespace',
    '--version=>=0.0.0-beta',
    '--set=flux2.watchAllNamespaces=true',
    '--set=super-agent-deployment.enabled=false',
    ],
  resource_deps=['newrelic-helm-repo']
)

# # Agent operator chart
# helm_repo(
# 'k8s-agents-operator',
# 'https://newrelic.github.io/k8s-agents-operator',
# resource_name='operator-helm-repo',
# )
# helm_resource(
#   'agent-operator',
#   'k8s-agents-operator/k8s-agents-operator',
#   namespace='default',
#   release_name='agent-operator-tilt',
#   update_dependencies=False,
#   flags=['--set=licenseKey=fake',],
#   resource_deps=['operator-helm-repo']
# )

# local_resource(
#     'oci-chart',
#     cmd="helm package ../../super-agent/tests/k8s/data/charts/agent-crd && helm push agent-crd-0.1.0.tgz oci://localhost:57818/crd",
#     deps=[
#     '../../super-agent/tests/k8s/data/charts/agent-crd',
#     ]
# )