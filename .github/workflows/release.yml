##permissions:
##  contents: read
#
#on:
#  push:
##  release:
##    types:
##      - released
##    tags:
##      - '*'
#
## See https://docs.github.com/en/actions/using-jobs/using-concurrency
#name: pre-release
#jobs:
#  required:
#    runs-on: ubuntu-latest
#    name: Build and upload / ${{ matrix.arch }}
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      #download release assets
#      - name: Download release
#        run: gh release download 0.0.1 --dir ./dist/ #${{ github.event.release.tag_name }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: check
#        run: ls -la
#
##      - name: Publish deb to S3 action
##        uses: newrelic/infrastructure-publish-action@v1.2.6
##        with:
##          tag: ${{ github.event.release.tag_name }}
##          app_name: "newrelic-infra"
##          repo_name: "newrelic/infrastructure-agent"
##          schema: "custom"
##          schema_url: "https://raw.githubusercontent.com/newrelic/infrastructure-agent/${{ env.BRANCH }}/build/upload-schema-linux-deb.yml"
##          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
##          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
##          aws_s3_bucket_name: ${{ env.AWS_S3_BUCKET_NAME }}
##          aws_s3_lock_bucket_name: ${{ env.AWS_S3_LOCK_BUCKET_NAME }}
##          access_point_host: ${{ env.ACCESS_POINT_HOST }}
##          run_id: ${{ env.RUN_ID }}
##          aws_region: ${{ env.AWS_REGION }}
##          aws_role_session_name: ${{ env.AWS_ROLE_SESSION_NAME }}
##          aws_role_arn: ${{ env.AWS_ROLE_ARN }}
##          # used for signing package stuff
##          gpg_passphrase: ${{ env.GPG_PASSPHRASE }}
##          gpg_private_key_base64: ${{ env.GPG_PRIVATE_KEY_BASE64 }}
##          disable_lock: ${{ env.DISABLE_LOCK }}
##          dest_prefix: ${{ env.DEST_PREFIX }}
##          local_packages_path:  "/srv/dist/"
##          apt_skip_mirror:  true
##
##      - name: Publish rpm to S3 action
##        uses: newrelic/infrastructure-publish-action@v1.2.6
##        with:
##          tag: ${{ github.event.release.tag_name }}
##          app_name: "nr-meta-agent"
##          repo_name: "newrelic/newrelic-supervisor"
##          schema: "custom"
##          schema_url: "https://raw.githubusercontent.com/newrelic/infrastructure-agent/${{ env.BRANCH }}/build/upload-schema-linux-rpm.yml"
##          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
##          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
##          aws_s3_bucket_name: ${{ env.AWS_S3_BUCKET_NAME }}
##          aws_s3_lock_bucket_name: ${{ env.AWS_S3_LOCK_BUCKET_NAME }}
##          access_point_host: ${{ env.ACCESS_POINT_HOST }}
##          run_id: ${{ env.RUN_ID }}
##          aws_region: ${{ env.AWS_REGION }}
##          aws_role_session_name: ${{ env.AWS_ROLE_SESSION_NAME }}
##          aws_role_arn: ${{ env.AWS_ROLE_ARN }}
##          # used for signing package stuff
##          gpg_passphrase: ${{ env.GPG_PASSPHRASE }}
##          gpg_private_key_base64: ${{ env.GPG_PRIVATE_KEY_BASE64 }}
##          disable_lock: ${{ env.DISABLE_LOCK }}
##          dest_prefix: ${{ env.DEST_PREFIX }}
##          local_packages_path:  "/srv/dist/"
##
##      - name: Publish targz to S3 action
##        uses: newrelic/infrastructure-publish-action@v1.2.6
##        with:
##          tag: ${{ github.event.release.tag_name }}
##          app_name: "newrelic-infra"
##          repo_name: "newrelic/infrastructure-agent"
##          schema: "custom"
##          schema_url: "https://raw.githubusercontent.com/newrelic/infrastructure-agent/${{ env.BRANCH }}/build/upload-schema-linux-targz.yml"
##          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
##          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
##          aws_s3_bucket_name: ${{ env.AWS_S3_BUCKET_NAME }}
##          aws_s3_lock_bucket_name: ${{ env.AWS_S3_LOCK_BUCKET_NAME }}
##          access_point_host: ${{ env.ACCESS_POINT_HOST }}
##          run_id: ${{ env.RUN_ID }}
##          aws_region: ${{ env.AWS_REGION }}
##          aws_role_session_name: ${{ env.AWS_ROLE_SESSION_NAME }}
##          aws_role_arn: ${{ env.AWS_ROLE_ARN }}
##          # used for signing package stuff
##          gpg_passphrase: ${{ env.GPG_PASSPHRASE }}
##          gpg_private_key_base64: ${{ env.GPG_PRIVATE_KEY_BASE64 }}
##          disable_lock: ${{ env.DISABLE_LOCK }}
##          dest_prefix: ${{ env.DEST_PREFIX }}
##          local_packages_path:  "/srv/dist/"
##
