permissions:
  contents: read
on:
  push:
    branches: [ main ]
  pull_request:
  merge_group:
# See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
name: coverage
jobs:
  coverage:
    runs-on: ubuntu-latest
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Give GitHub Actions access to private crates
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.CAOS_RUST_CRATES }}
      - name: Install stable
        uses: dtolnay/rust-toolchain@4f366e621dc8fa63f557ca04b8f4361824a35a45
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@71765c00dd3e08a5484a5b9e82a4c88b86520e0e
        # uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo llvm-cov for k8s version
        run: cargo llvm-cov --locked --features=k8s --json --output-path jcov.info -- --skip as_root
      - name: Calculate and print total coverage
        run: |
          echo "Total functions coverage: $(jq '.data[].totals.functions.percent' jcov.info)"
          echo "Total lines coverage: $(jq '.data[].totals.lines.percent' jcov.info)"
          echo "Total regions coverage: $(jq '.data[].totals.regions.percent' jcov.info)"
          echo "Total instantiations coverage: $(jq '.data[].totals.instantiations.percent' jcov.info)"
      - name: cargo llvm-cov for onHost version
        run: CARGO_CMD="llvm-cov" CARGO_ARGS="--locked --features=onhost --json --output-path jcov.info -- --skip as_root" make super-agent
      - name: Calculate and print total coverage
        run: |
          echo "Total functions coverage: $(jq '.data[].totals.functions.percent' jcov.info)"
          echo "Total lines coverage: $(jq '.data[].totals.lines.percent' jcov.info)"
          echo "Total regions coverage: $(jq '.data[].totals.regions.percent' jcov.info)"
          echo "Total instantiations coverage: $(jq '.data[].totals.instantiations.percent' jcov.info)"
