name: ðŸ“ž k8s E2E tests

on:
  workflow_call:
    inputs:
      scenarios:
        description: 'JSON array of test scenarios to run'
        required: false
        type: string
        default: '[]'
      minikube_start_args:
        description: 'Arguments to pass to Minikube start command'
        required: false
        type: string
        default: ''
    secrets:
      NR_SYSTEM_IDENTITY_CLIENT_ID:
        required: false
      NR_SYSTEM_IDENTITY_PRIVATE_KEY:
        required: false
      E2E_ACCOUNT_ID:
        required: true
      E2E_API_KEY:
        required: true
      E2E_LICENSE_KEY:
        required: true

permissions:
  contents: read

jobs:
  # These tests are using (by default) the released charts
  # In case a breaking change is introduced by the PR, a feature branch can be used as explained
  # in the test/k8s-e2e/Readme.md
  k8s-e2e-tests:
    name: K8s e2e tests ${{ matrix.group }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        group: ${{ fromJSON(inputs.scenarios) }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.14.0
        with:
          minikube version: v1.35.0
          kubernetes version: "v1.30.14"
          start args: ${{ inputs.minikube_start_args }}
          driver: docker
          github token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Tilt
        run: |
          curl -fsSL https://raw.githubusercontent.com/tilt-dev/tilt/master/scripts/install.sh | bash

      - name: Obtain Rust version from project
        run: |
          RUST_VERSION=$(grep "rust-version" Cargo.toml | cut -d "=" -f2 | tr -d "[:space:]")
          echo "RUST_VERSION=${RUST_VERSION}" >> $GITHUB_ENV

      - name: Install Rust ${{ env.RUST_VERSION }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: >-
            x86_64-unknown-linux-musl

      - uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-test-dev

      - name: Install Zig
        uses: mlugg/setup-zig@v2

      - name: Install cargo-zigbuild
        run: |
          cargo install --locked cargo-zigbuild

      - name: Run k8s e2e-test ${{ matrix.group }}
        uses: newrelic/newrelic-integration-e2e-action@v1
        env:
          # SI L2->L2 for AC
          NR_SYSTEM_IDENTITY_CLIENT_ID: ${{ secrets.NR_SYSTEM_IDENTITY_CLIENT_ID }}
          NR_SYSTEM_IDENTITY_PRIVATE_KEY: ${{ secrets.NR_SYSTEM_IDENTITY_PRIVATE_KEY }}
          # Tilt configs
          ARCH: amd64
          TARGET_TUPLE: x86_64-unknown-linux-musl
        with:
          retry_attempts: 20
          retry_seconds: 15
          agent_enabled: false
          spec_path: test/k8s-e2e/${{ matrix.group }}/e2e-${{ matrix.group }}.yml
          account_id: ${{ secrets.E2E_ACCOUNT_ID }}
          api_key: ${{ secrets.E2E_API_KEY }}
          license_key: ${{ secrets.E2E_LICENSE_KEY }}

  k8s-e2e-tests-check: # The job is useful to notify the failure
    name: K8s e2e tests
    if: always() # cannot be skipped even if required steps fail
    runs-on: ubuntu-latest
    needs: [ k8s-e2e-tests ]
    steps:
      - name: Check if needed jobs succeeded
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe
        with:
          jobs: ${{ toJSON(needs) }}
