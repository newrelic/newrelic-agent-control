name: ðŸ“ž k8s canaries helm update

on:
  workflow_call:
    secrets:
      AWS_ROLE_ARN:
        required: true
      AWS_VPC_SUBNET:
        required: true

    inputs:
      image-tag:
        required: true
        type: string
      cluster_name:
        required: true
        type: string
      fleet_id:
        required: true
        type: string
      canary_dir:
        description: "Name of the tf directory to run the canary in. Valid values are `production` and `staging`."
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  infra:
    name: Prepare infra

    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-2

      - name: Set branch name
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          # Is the ref a tag? If so, remove refs/tags/ prefix
          GIT_BRANCH=${GIT_BRANCH#refs/tags/}
          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Upgrade helm release
        uses: newrelic/fargate-runner-action@main
        with:
          aws_region: us-east-2
          container_make_target: "FLEET_ID=${{ inputs.fleet_id }} IMAGE_TAG=${{ inputs.image-tag }} CLUSTER_NAME=${{ inputs.cluster_name }} CANARY_DIR=${{ inputs.canary_dir }} test/k8s-canaries/helm-upgrade"
          ecs_cluster_name: agent_control
          task_definition_name: agent_control
          cloud_watch_logs_group_name: /ecs/test-prerelease-agent_control
          cloud_watch_logs_stream_name: ecs/test-agent_control
          aws_vpc_subnet: ${{ secrets.AWS_VPC_SUBNET }}
          repo_name: ${{ github.repository }}
          git_clone_url: "ssh://git@github.com/${{ github.repository }}.git"
          ref: "${{ env.GIT_BRANCH }}"
