permissions:
  contents: read
on:
# TODO: validate when to trigger the pipeline
  push:
# See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
name: test
jobs:
  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Give GitHub Actions access to private crates
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.CAOS_RUST_CRATES }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@4f366e621dc8fa63f557ca04b8f4361824a35a45
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets -- --skip as_root
      - name: cargo test --doc
        run: cargo test --locked --all-features --doc
  # Test using root can be troublesome to perform as usually the Rust toolchain is installed local to the user.
  # To test for root privileges, we can run from a container (disabling the test that fail if running non-root).
  test-with-root:
    runs-on: ubuntu-latest
    container: rust:latest
    name: tests as root
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Give GitHub Actions access to private crates
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.CAOS_RUST_CRATES }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test --locked --all-features
        run: cargo test --locked --all-features --all-targets -- --skip no_root
  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Give GitHub Actions access to private crates
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.CAOS_RUST_CRATES }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
      - name: Install stable
        uses: dtolnay/rust-toolchain@4f366e621dc8fa63f557ca04b8f4361824a35a45
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test
        run: cargo test --locked --all-features --all-targets -- --skip as_root

  embedded:
    name: Unit test for embedded downloader
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Give GitHub Actions access to private crates
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.CAOS_RUST_CRATES }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v2
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'build/embedded/go.mod'

      - name: run tests for embedded downloader
        run: make -C build/embedded test
