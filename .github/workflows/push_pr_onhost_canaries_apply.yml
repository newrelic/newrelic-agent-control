permissions:
  id-token: write
  contents: read
on:
  push:
    branches:
      - main
    paths:
      - test/onhost-canaries/terraform/**
concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.run_id }}"
  cancel-in-progress: false
name: terraform apply onhost canaries

jobs:
  infra:
    name: Prepare infra
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-2

      - uses: actions/checkout@v4

      - name: Set branch name
        run: |
          # Short name for current branch. For PRs, use target branch (base ref)
          GIT_BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          # Is the ref a tag? If so, remove refs/tags/ prefix
          GIT_BRANCH="${GIT_BRANCH#refs/tags/}"
          echo "GIT_BRANCH=$GIT_BRANCH" >> "$GITHUB_ENV"

      # If the infrastructure is not already created, this step will fail.
      # The main.tf file inside test/onhost-canaries uses a hardcoded value for the path
      # where it expects to find the ssh private key.
      # This key is not stored in the repo, nor in github secrets.
      - name: Sync onhost staging canary
        uses: newrelic/fargate-runner-action@main
        with:
          aws_region: us-east-2
          container_make_target: "TERRAFORM_DIR=test/onhost-canaries/terraform ANSIBLE_FOLDER=test/onhost-canaries/ansible ENVIRONMENT=staging test/onhost-canaries/terraform-apply"
          ecs_cluster_name: agent_control
          task_definition_name: agent_control
          cloud_watch_logs_group_name: /ecs/test-prerelease-agent_control
          cloud_watch_logs_stream_name: ecs/test-agent_control
          aws_vpc_subnet: ${{ secrets.AWS_VPC_SUBNET }}
          repo_name: ${{ github.repository }}
          git_clone_url: "ssh://git@github.com/${{ github.repository }}.git"
          ref: "${{ env.GIT_BRANCH }}"

      - name: Sync onhost production canary
        uses: newrelic/fargate-runner-action@main
        with:
          aws_region: us-east-2
          container_make_target: "TERRAFORM_DIR=test/onhost-canaries/terraform ANSIBLE_FOLDER=test/onhost-canaries/ansible ENVIRONMENT=production test/onhost-canaries/terraform-apply"
          ecs_cluster_name: agent_control
          task_definition_name: agent_control
          cloud_watch_logs_group_name: /ecs/test-prerelease-agent_control
          cloud_watch_logs_stream_name: ecs/test-agent_control
          aws_vpc_subnet: ${{ secrets.AWS_VPC_SUBNET }}
          repo_name: ${{ github.repository }}
          git_clone_url: "ssh://git@github.com/${{ github.repository }}.git"
          ref: "${{ env.GIT_BRANCH }}"
