permissions:
  contents: read
on:
  # TODO: validate when to trigger the pipeline
  push:
  merge_group:
# See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
name: test

env:
  # Allows to fetch multiple private repo crates with different deploy keys.
  CARGO_NET_GIT_FETCH_WITH_CLI: true
jobs:
  release-build:
    runs-on: ubuntu-latest
    name: "Build release binaries"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Give GitHub Actions access to private crates
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: |
            ${{ secrets.CAOS_OAUTH_DEPLOY_KEY }}
            ${{ secrets.CAOS_OPAMP_DEPLOY_KEY }}
      - name: Install stable
        uses: dtolnay/rust-toolchain@1.78.0
        with:
          toolchain: stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Build config migrate in release mode
        run: cargo build --release --package config-migrate
      - name: Build k8s in release mode
        run: cargo build --release --package newrelic_super_agent --features k8s
      - name: Build onhost in release mode
        run: cargo build --release --package newrelic_super_agent --features onhost

  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        toolchain: [ stable, beta ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Give GitHub Actions access to private crates
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: |
            ${{ secrets.CAOS_OAUTH_DEPLOY_KEY }}
            ${{ secrets.CAOS_OPAMP_DEPLOY_KEY }}

      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@1.78.0
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile

      - name: Run tests config-migrate
        run: cargo test --locked --package config-migrate --all-targets

      - name: Run tests fs
        run: cargo test --locked --package fs --all-targets

      - name: Run tests license
        run: cargo test --locked --package license --all-targets

      - name: Run tests resource-detection
        run: cargo test --locked --package resource-detection --all-targets

      - name: Run tests super agent lib excluding root-required tests (on-host)
        run: make -C super-agent test/onhost
      
      - name: Run tests super agent integration_test excluding root-required tests (on-host)
        run: make -C super-agent test/onhost/integration

      - name: Run tests super agent (k8s)
        run: make -C super-agent test/k8s

      - name: Run documentation tests onhost
        run: cargo test --locked --package newrelic_super_agent --features=onhost --doc

      - name: Run documentation tests k8st
        run: cargo test --locked --package newrelic_super_agent --features=k8s --doc

  # Test using root can be troublesome to perform as usually the Rust toolchain is installed local to the user.
  # To test for root privileges, we can run from a container (disabling the test that fail if running non-root).
  test-with-root:
    runs-on: ubuntu-latest
    container: rust:latest
    name: tests as root
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Give GitHub Actions access to private crates
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: |
            ${{ secrets.CAOS_OAUTH_DEPLOY_KEY }}
            ${{ secrets.CAOS_OPAMP_DEPLOY_KEY }}

      - name: Apply webfactory/ssh-agent action configs to the container shh config
        run: |
          cat /root/.ssh/config >> /etc/ssh/ssh_config
          ssh-keyscan -H github.com >> /etc/ssh/ssh_known_hosts

      - name: Install 
        uses: dtolnay/rust-toolchain@1.78.0
        with:
          toolchain: stable

      - name: Run onHost root-required lib tests only
        run: make -C super-agent test/onhost/root

      - name: Run onHost root-required integration-tests only
        run: make -C super-agent test/onhost/root/integration

  embedded:
    name: Unit test for embedded downloader
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Give GitHub Actions access to private crates
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: |
            ${{ secrets.CAOS_OAUTH_DEPLOY_KEY }}
            ${{ secrets.CAOS_OPAMP_DEPLOY_KEY }}
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'build/embedded/go.mod'
      - name: run tests for embedded downloader
        run: make -C build/embedded test

  k8s-integration-tests:
    name: K8s integration tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Give GitHub Actions access to private crates
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: |
            ${{ secrets.CAOS_OAUTH_DEPLOY_KEY }}
            ${{ secrets.CAOS_OPAMP_DEPLOY_KEY }}
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.10.0
        with:
          minikube version: v1.32.0
          kubernetes version: 'v1.28.1' # Should we support a specific range of versions?
          driver: docker
      - name: Install Tilt
        run: |
          curl -fsSL https://raw.githubusercontent.com/tilt-dev/tilt/master/scripts/install.sh | bash
      - name: Install stable
        uses: dtolnay/rust-toolchain@1.78.0
      - name: Run k8s integration tests
        run: make -C super-agent/tests/k8s

  # These tests are using (by default) the released charts
  # In case a breaking change is introduced by the PR, a feature branch can be used as explained
  # in the test/k8s-e2e/Readme.md
  k8s-e2-tests:
    name: K8s e2e tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Give GitHub Actions access to private crates
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: |
            ${{ secrets.CAOS_OAUTH_DEPLOY_KEY }}
            ${{ secrets.CAOS_OPAMP_DEPLOY_KEY }}
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.10.0
        with:
          minikube version: v1.32.0
          kubernetes version: 'v1.28.1'
          driver: docker
      - name: Install Tilt
        run: |
          curl -fsSL https://raw.githubusercontent.com/tilt-dev/tilt/master/scripts/install.sh | bash
      - name: Install stable
        uses: dtolnay/rust-toolchain@1.78.0
      - name: Run e2e-test
        uses: newrelic/newrelic-integration-e2e-action@v1
        env:
          # Tilt configs
          ARCH: amd64
          BUILD_WITH: cargo
        with:
          retry_seconds: 60
          retry_attempts: 10
          agent_enabled: false
          spec_path: test/k8s-e2e/e2e-spec.yml
          account_id: ${{ secrets.COREINT_E2E_ACCOUNT_ID }}
          api_key: ${{ secrets.COREINT_E2E_API_KEY }}
          license_key: ${{ secrets.COREINT_E2E_LICENSE_KEY }}
